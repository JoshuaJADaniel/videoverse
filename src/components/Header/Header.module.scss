@import "src/styles/variables";

// Searchbar colors
$searchbarBackground: #d9d9d9;
$searchbarTextColor: #737373;
$searchbarTextColorHover: #000000;

$darkSearchbarBackground: #333333;
$darkSearchbarTextColor: #8c8c8c;
$darkSearchbarTextColorHover: #ffffff;

// Toggle theme colors
$toggleThemeShadow: 0 0 0 2px #c8c8c8;
$darkToggleThemeShadow: 0 0 0 2px #6e6e6e;

// Default button colors
$defaultButtonColor: #777777;
$defaultButtonColorHover: #000000;

$darkDefaultButtonColor: #a5a5a5;
$darkDefaultButtonColorHover: #ffffff;

// Misc.
$searchbarBorderRadius: 3px;
$toggleThemeColorTransition: 0.2s ease;
$toggleThemeTransformTransition: 0.5s ease;

@mixin formColors($textColor, $textHover, $background) {
  input,
  button {
    background: $background;
  }

  button {
    color: $textColor;

    &:hover,
    &:focus {
      color: $textHover;
    }
  }

  input {
    color: $textHover;
    caret-color: $textHover;

    &::placeholder {
      color: $textColor;
    }
  }
}

@mixin buttonContainerColors($textColor, $textHover) {
  button {
    svg {
      color: $textColor;
    }

    &:focus svg,
    &:hover svg {
      color: $textHover;
    }
  }
}

.headerContainer {
  display: flex;
  align-items: center;
  padding: 16px 24px 16px 16px;

  svg {
    stroke-width: 2;
    vertical-align: middle;
    transition: color $transition;
  }
}

.menuContainer {
  display: none;
}

.menuContainer,
.historyContainer {
  flex-grow: 0;
  flex-shrink: 0;

  button {
    width: 40px;
    height: 40px;
    background: transparent;

    line {
      transition: transform 0.75s ease-in-out;
    }
  }
}

.formContainer {
  @include formColors(
    $searchbarTextColor,
    $searchbarTextColorHover,
    $searchbarBackground
  );

  width: 100%;
  display: flex;
  padding: 0 24px 0 16px;

  button {
    padding: 8px 16px;
    border-right: 2px solid rgba(128, 128, 128, 0.1);
    border-radius: $searchbarBorderRadius 0 0 $searchbarBorderRadius;
  }

  input {
    width: 100%;
    padding: 12px;
    border-radius: 0 $searchbarBorderRadius $searchbarBorderRadius 0;

    font-size: 18px;
    font-weight: 700;
  }
}

.toggleThemeContainer {
  width: 80px;
  height: 40px;
  position: relative;

  flex-grow: 0;
  flex-shrink: 0;

  input {
    width: 100%;
    height: 100%;
    position: relative;

    opacity: 0;
    z-index: 999;
    cursor: pointer;

    &:checked + span {
      background: #000000;
    }

    &:checked + span:before {
      background: #000000;
      transform: translate(55px, -25px);
    }

    &:checked + span:after {
      background: #ffffff;
      transform: translateX(40px);
    }
  }

  span {
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    position: absolute;
    overflow: hidden;

    border-radius: 50px;
    background: #ffffff;
    box-shadow: $toggleThemeShadow;
    transition: background $toggleThemeColorTransition;

    &:before,
    &:after {
      content: "";

      width: 32px;
      height: 32px;

      position: absolute;
      border-radius: 50%;
      transition: transform $toggleThemeTransformTransition,
        background $toggleThemeColorTransition;
    }

    &:before {
      top: 20px;
      left: -25px;
      z-index: 1;
      background: #ffffff;
    }

    &:after {
      top: 4px;
      left: 4px;
      z-index: 0;
      background: #000000;
    }
  }
}

@media (max-width: $sm) {
  .historyContainer,
  .toggleThemeContainer {
    display: none;
  }

  .menuContainer {
    display: block;
  }

  .formContainer {
    padding-right: 0;
  }
}

:global(.sidebarClose) {
  line {
    transform: translateX(-22px);
  }

  line:first-child {
    transform: rotate(45deg) translate(5px, -4px);
  }

  line:last-child {
    transform: rotate(-45deg) translate(-11px, -4px);
  }
}

:global(body.dark) {
  .menuContainer,
  .historyContainer {
    @include buttonContainerColors(
      $darkDefaultButtonColor,
      $darkDefaultButtonColorHover
    );
  }

  .formContainer {
    @include formColors(
      $darkSearchbarTextColor,
      $darkSearchbarTextColorHover,
      $darkSearchbarBackground
    );
  }

  .toggleThemeContainer span {
    box-shadow: $darkToggleThemeShadow;
  }
}
