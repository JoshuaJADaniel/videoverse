@import 'src/styles/variables';

// Light theme
$searchbarTextColor: #737373;
$searchbarTextColorHover: #000000;
$searchbarBackground: #d9d9d9;

$themeToggleShadow: 0 0 0 2px #c8c8c8;

$historyColor: #777777;
$historyColorHover: #000000;

// Dark theme
$darkSearchbarTextColor: #8c8c8c;
$darkSearchbarTextColorHover: #ffffff;
$darkSearchbarBackground: #333333;

$darkThemeToggleShadow: 0 0 0 2px #6e6e6e;

$darkHistoryColor: #a5a5a5;
$darkHistoryColorHover: #ffffff;

// Misc.
$searchbarBorderRadius: 3px;

.headerContainer {
  display: flex;
  align-items: center;
  padding: 16px 24px 16px 16px;

  & svg {
    stroke-width: 2;
    vertical-align: middle;
    transition: color $transition;
  }
}

.menuContainer {
  display: none;
}

.menuContainer,
.historyContainer {
  flex-grow: 0;
  flex-shrink: 0;

  & button {
    width: 40px;
    height: 40px;
    padding: 8px;

    background: transparent;

    & svg {
      color: $historyColor;

      & line {
        transition: transform 0.75s ease-in-out;
      }
    }

    &:hover svg,
    &:focus svg {
      color: $historyColorHover;
    }
  }
}

.formContainer {
  width: 100%;
  display: flex;
  padding: 0 24px 0 16px;

  & input,
  & button {
    background: $searchbarBackground;
  }

  & button {
    padding: 8px 16px;
    color: $searchbarTextColor;
    border-right: 2px solid rgba(128, 128, 128, 0.1);
    border-radius: $searchbarBorderRadius 0 0 $searchbarBorderRadius;

    &:hover,
    &:focus {
      color: $searchbarTextColorHover;
    }
  }

  & input {
    width: 100%;
    padding: 12px;

    font-size: 18px;
    font-weight: 700;
    color: $searchbarTextColorHover;
    caret-color: $searchbarTextColorHover;
    border-radius: 0 $searchbarBorderRadius $searchbarBorderRadius 0;

    &::placeholder {
      color: $searchbarTextColor;
    }
  }
}

.toggleThemeContainer {
  width: 80px;
  height: 40px;
  position: relative;

  flex-grow: 0;
  flex-shrink: 0;

  & input {
    width: 100%;
    height: 100%;

    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    position: absolute;

    opacity: 0;
    z-index: 999;
    cursor: pointer;

    &:checked + span {
      background-color: #000000;
    }

    &:checked + span:before {
      background-color: #000000;
      transform: translate(55px, -25px);
    }

    &:checked + span:after {
      background-color: #ffffff;
      transform: translateX(40px);
    }
  }

  & span {
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    position: absolute;

    opacity: 1;
    overflow: hidden;

    border-radius: 50px;
    background-color: #ffffff;
    transition: 0.2s ease background-color, 0.2s ease opacity;
    box-shadow: $themeToggleShadow;

    &:before,
    &:after {
      content: "";

      width: 32px;
      height: 32px;

      position: absolute;
      border-radius: 50%;
      transition: 0.5s ease transform, 0.2s ease background-color;
    }

    &:before {
      top: 20px;
      left: -25px;
      z-index: 1;

      background-color: #ffffff;
    }

    &:after {
      top: 4px;
      left: 4px;
      z-index: 0;

      background-color: #000000;
    }
  }
}

@media (max-width: $sm) {
  .historyContainer {
    display: none;
  }

  .toggleThemeContainer {
    display: none;
  }

  .menuContainer {
    display: block;
  }

  .formContainer {
    padding-right: 0;
  }
}

:global(.sidebarClose) {
  line:first-child {
    transform: rotate(45deg) translate(5px, -4px);
  }

  line:not(:first-child):not(:last-child) {
    transform: translateX(-22px);
  }

  line:last-child {
    transform: rotate(-45deg) translate(-11px, -4px);
  }
}

:global(body.dark) {
  .menuContainer,
  .historyContainer {
    & button {
      & svg {
        color: $darkHistoryColor;
      }

      &:focus svg,
      &:hover svg {
        color: $darkHistoryColorHover;
      }
    }
  }

  .formContainer {
    & input,
    & button {
      background: $darkSearchbarBackground;
    }

    & button {
      color: $darkSearchbarTextColor;

      &:hover,
      &:focus {
        color: $darkSearchbarTextColorHover;
      }
    }

    & input {
      color: $darkSearchbarTextColorHover;
      caret-color: $darkSearchbarTextColorHover;

      &::placeholder {
        color: $darkSearchbarTextColor;
      }
    }
  }

  .toggleThemeContainer span {
    box-shadow: $darkThemeToggleShadow;
  }
}
